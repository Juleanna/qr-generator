#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ–∫—Å—Ç–æ–≤–∏–π —Ç–∏–ø QR-–∫–æ–¥—É
"""

import tkinter as tk
from typing import Dict, Any, Tuple
from .base import BaseQRType, register_qr_type
from ..utils.clipboard import setup_clipboard_menu, auto_paste_if_valid

class TextQRType(BaseQRType):
    """–ö–ª–∞—Å –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö QR-–∫–æ–¥—ñ–≤"""
    
    def __init__(self):
        super().__init__("–ó–≤–∏—á–∞–π–Ω–∏–π —Ç–µ–∫—Å—Ç", "üìù")
    
    def create_input_fields(self, parent: tk.Widget, clipboard_manager=None) -> Dict[str, tk.Widget]:
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ–ª—ñ–≤ –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É"""
        self.input_widgets = {}
        
        # –û—á–∏—â–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        for widget in parent.winfo_children():
            widget.destroy()
        
        # –ü–æ–ª–µ –¥–ª—è —Ç–µ–∫—Å—Ç—É
        text_widget = self.create_label_text_pair(
            parent, 
            "–¢–µ–∫—Å—Ç –¥–ª—è –∫–æ–¥—É–≤–∞–Ω–Ω—è:", 
            text_height=8,
            text_width=60
        )
        
        self.input_widgets['text'] = text_widget
        
        # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±—É—Ñ–µ—Ä–∞ –æ–±–º—ñ–Ω—É
        if clipboard_manager:
            setup_clipboard_menu(text_widget, clipboard_manager)
            # –ê–≤—Ç–æ–≤—Å—Ç–∞–≤–∫–∞ –±—É–¥—å-—è–∫–æ–≥–æ —Ç–µ–∫—Å—Ç—É
            auto_paste_if_valid(text_widget, clipboard_manager)
        
        # –õ—ñ—á–∏–ª—å–Ω–∏–∫ —Å–∏–º–≤–æ–ª—ñ–≤
        self.char_count_var = tk.StringVar()
        self.char_count_var.set("–°–∏–º–≤–æ–ª—ñ–≤: 0 / 4296")
        
        count_label = tk.Label(parent, textvariable=self.char_count_var, 
                              font=('Arial', 9), fg='gray')
        count_label.pack(anchor='w', pady=(5, 0))
        
        # –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Ç–µ–∫—Å—Ç—É
        def update_char_count(*args):
            try:
                text = text_widget.get("1.0", tk.END).rstrip('\n')
                char_count = len(text)
                self.char_count_var.set(f"–°–∏–º–≤–æ–ª—ñ–≤: {char_count} / 4296")
                
                # –ó–º—ñ–Ω–∞ –∫–æ–ª—å–æ—Ä—É –ø—Ä–∏ –Ω–∞–±–ª–∏–∂–µ–Ω–Ω—ñ –¥–æ –ª—ñ–º—ñ—Ç—É
                if char_count > 4296:
                    count_label.config(fg='red')
                elif char_count > 3800:
                    count_label.config(fg='orange')
                else:
                    count_label.config(fg='gray')
            except:
                pass
        
        # –ü—Ä–∏–≤'—è–∑–∫–∞ –¥–æ –∑–º—ñ–Ω–∏ —Ç–µ–∫—Å—Ç—É
        text_widget.bind('<KeyRelease>', update_char_count)
        text_widget.bind('<ButtonRelease>', update_char_count)
        text_widget.bind('<FocusOut>', update_char_count)
        
        return self.input_widgets
    
    def validate_input(self, data: Dict[str, Any]) -> Tuple[bool, str]:
        """–í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö"""
        text = data.get('text', '').strip()
        
        if not text:
            return False, "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–¥—É–≤–∞–Ω–Ω—è"
        
        if len(text) > 4296:
            return False, f"–¢–µ–∫—Å—Ç –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–∏–π ({len(text)} —Å–∏–º–≤–æ–ª—ñ–≤). –ú–∞–∫—Å–∏–º—É–º: 4296 —Å–∏–º–≤–æ–ª—ñ–≤"
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω—ñ —Å–∏–º–≤–æ–ª–∏
        try:
            text.encode('utf-8')
        except UnicodeEncodeError:
            return False, "–¢–µ–∫—Å—Ç –º—ñ—Å—Ç–∏—Ç—å –Ω–µ–ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω—ñ —Å–∏–º–≤–æ–ª–∏"
        
        return True, text
    
    def generate_qr_data(self, data: Dict[str, Any]) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –¥–ª—è QR-–∫–æ–¥—É"""
        return data.get('text', '').strip()
    
    def get_info_text(self) -> str:
        """–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–µ–∫—Å—Ç–æ–≤–∏–π —Ç–∏–ø QR-–∫–æ–¥—É"""
        return ("–ó–≤–∏—á–∞–π–Ω–∏–π —Ç–µ–∫—Å—Ç - –Ω–∞–π–ø—Ä–æ—Å—Ç—ñ—à–∏–π —Ç–∏–ø QR-–∫–æ–¥—É. –ú–æ–∂–µ –º—ñ—Å—Ç–∏—Ç–∏ –±—É–¥—å-—è–∫–∏–π —Ç–µ–∫—Å—Ç "
                "–¥–æ 4296 —Å–∏–º–≤–æ–ª—ñ–≤. –ü—ñ–¥—Ç—Ä–∏–º—É—î UTF-8 –∫–æ–¥—É–≤–∞–Ω–Ω—è –¥–ª—è –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–∏—Ö —Å–∏–º–≤–æ–ª—ñ–≤.")

# –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —Ç–∏–ø—É
register_qr_type('text', TextQRType)